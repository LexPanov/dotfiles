#!/bin/bash

#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command>
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.

# add an on_enter command to the default mode
# :: default : chunkc border::color 0xff775759
#
# defines a new mode 'test' with an on_enter command, that captures keypresses
# :: test @ : chunkc border::color 0xff24ccaa
#
# from 'default' mode, activate mode 'test'
# cmd - x ; test
#
# from 'test' mode, activate mode 'default'
# test < cmd - x ; default
#
# launch a new terminal instance when in either 'default' or 'test' mode
# default, test < cmd - return : open -na /Applications/Terminal.app

# application specific bindings
#
# cmd - n [
#     "kitty"       : echo "hello kitty"
#     "qutebrowser" : echo "hello qutebrowser"
#     "finder"      : false
# ]

# narze's config
# Legends
# Leader : Alt
# Navigation : H / J / K / L (vim)
# Prew / Next : < / >
# Move : Leader + Shift
# Resize : Leader + Cmd
# Monitor : I / O
# Desktop : U / P or Leader + Ctrl

# Keycodes
# 0x23 = Colemak semicolon / Qwerty P
# 0x2B = Comma / <
# 0x2F = Fullstop / >

# close focused window
alt - w : chunkc tiling::window --close

# focus window
alt - h : chunkc tiling::window --focus west
alt - n : chunkc tiling::window --focus south
alt - e : chunkc tiling::window --focus north
alt - i : chunkc tiling::window --focus east

# focus prev/next window, works with floats
alt - 0x2B : echo "$(chunkc tiling::query --desktop windows | sort)""\n" \
             "$(chunkc tiling::query --desktop windows | sort | head -n 1)" | \
             grep -B1 $(chunkc tiling::query --window id) | \
             tail -n2 | head -n1 | sed 's/,.*//' | \
             xargs chunkc tiling::window --focus

alt - 0x2F : echo "$(chunkc tiling::query --desktop windows | sort)""\n" \
             "$(chunkc tiling::query --desktop windows | sort | head -n 1)" | \
             grep -A1 $(chunkc tiling::query --window id) | \
             head -n2 | tail -n1 | sed 's/,.*//' | \
             xargs chunkc tiling::window --focus

# focus monitor
alt - u  : chunkc tiling::monitor -f prev
alt + ctrl - h  : chunkc tiling::monitor -f prev
alt - y : chunkc tiling::monitor -f next # ;
alt + ctrl - i  : chunkc tiling::monitor -f next

# equalize size of windows
shift + alt - 0 : chunkc tiling::desktop --equalize

# move window
alt + cmd + shift - h : chunkc tiling::window --warp west
alt + cmd + shift - n : chunkc tiling::window --warp south
alt + cmd + shift - e : chunkc tiling::window --warp north
alt + cmd + shift - i : chunkc tiling::window --warp east

# swap window
alt + shift - h : chunkc tiling::window --swap west
alt + shift - n : chunkc tiling::window --swap south
alt + shift - e : chunkc tiling::window --swap north
alt + shift - i : chunkc tiling::window --swap east

# make floating window fill screen
ctrl + alt + cmd - t : chunkc tiling::window --grid-layout 1:1:0:0:1:1

# float fill left half
ctrl + alt + cmd - h : chunkc tiling::window --grid-layout 1:2:0:0:1:1

# float fill right half
ctrl + alt + cmd - i : chunkc tiling::window --grid-layout 1:2:1:0:1:1

# float fill bottom half
ctrl + alt + cmd - n : chunkc tiling::window --grid-layout 2:1:0:1:1:1

# float fill top half
ctrl + alt + cmd - e : chunkc tiling::window --grid-layout 2:1:0:0:1:1

# create desktop, move window and follow focus
ctrl + alt + cmd - k : chunkc tiling::desktop --create;\
                       id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
                       chunkc tiling::window --send-to-desktop $(echo ${id##* });\
                       chunkc tiling::desktop --focus $(echo ${id##* });\
                       chunkc tiling::window --grid-layout 1:1:0:0:1:1

# create desktop and follow focus
# cmd + alt - n : chunkc tiling::desktop --create;\
#                id=$(chunkc tiling::query --desktops-for-monitor $(chunkc tiling::query --monitor-for-desktop $(chunkc tiling::query --desktop id)));\
#                chunkc tiling::desktop --focus $(echo ${id##* })

# destroy desktop
ctrl + cmd + alt - w : chunkc tiling::desktop --annihilate

# fast focus desktop
alt + ctrl - 0x2B : chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
alt - l : chunkc tiling::desktop --focus prev
alt + ctrl - h : chunkc tiling::desktop --focus prev
alt - 0x23 : chunkc tiling::desktop --focus next
alt + ctrl - i : chunkc tiling::desktop --focus next
alt - 1 : chunkc tiling::desktop --focus 1
alt - 2 : chunkc tiling::desktop --focus 2
alt - 3 : chunkc tiling::desktop --focus 3
alt - 4 : chunkc tiling::desktop --focus 4
alt - 5 : chunkc tiling::desktop --focus 5
alt - 6 : chunkc tiling::desktop --focus 6
alt - 7 : chunkc tiling::desktop --focus 7
alt - 8 : chunkc tiling::desktop --focus 8

# send window to desktop
alt + ctrl + shift - 0x2B : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
alt + shift - l : chunkc tiling::window --send-to-desktop prev
alt + ctrl + shift - h  : chunkc tiling::window --send-to-desktop prev
alt + shift - 0x23 : chunkc tiling::window --send-to-desktop next
alt + ctrl + shift - i  : chunkc tiling::window --send-to-desktop next
shift + alt - 1 : chunkc tiling::window --send-to-desktop 1
shift + alt - 2 : chunkc tiling::window --send-to-desktop 2
shift + alt - 3 : chunkc tiling::window --send-to-desktop 3
shift + alt - 4 : chunkc tiling::window --send-to-desktop 4
shift + alt - 5 : chunkc tiling::window --send-to-desktop 5
shift + alt - 6 : chunkc tiling::window --send-to-desktop 6
shift + alt - 7 : chunkc tiling::window --send-to-desktop 7
shift + alt - 8 : chunkc tiling::window --send-to-desktop 8
shift + alt + cmd - 1 : chunkc tiling::window --send-to-desktop 1; chunkc tiling::desktop -f 1
shift + alt + cmd - 2 : chunkc tiling::window --send-to-desktop 2; chunkc tiling::desktop -f 2
shift + alt + cmd - 3 : chunkc tiling::window --send-to-desktop 3; chunkc tiling::desktop -f 3
shift + alt + cmd - 4 : chunkc tiling::window --send-to-desktop 4; chunkc tiling::desktop -f 4
shift + alt + cmd - 5 : chunkc tiling::window --send-to-desktop 5; chunkc tiling::desktop -f 5
shift + alt + cmd - 6 : chunkc tiling::window --send-to-desktop 6; chunkc tiling::desktop -f 6
shift + alt + cmd - 7 : chunkc tiling::window --send-to-desktop 7; chunkc tiling::desktop -f 7
shift + alt + cmd - 8 : chunkc tiling::window --send-to-desktop 8; chunkc tiling::desktop -f 8

# send window to desktop and follow focus
# shift + cmd - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop); chunkc tiling::desktop --focus $(chunkc get _last_active_desktop)
# shift + cmd - z : chunkc tiling::window --send-to-desktop prev; chunkc tiling::desktop --focus prev
# shift + cmd - c : chunkc tiling::window --send-to-desktop next; chunkc tiling::desktop --focus next
# shift + cmd - 1 : chunkc tiling::window --send-to-desktop 1; chunkc tiling::desktop --focus 1
# shift + cmd - 2 : chunkc tiling::window --send-to-desktop 2; chunkc tiling::desktop --focus 2
# shift + cmd - 3 : chunkc tiling::window --send-to-desktop 3; chunkc tiling::desktop --focus 3
# shift + cmd - 4 : chunkc tiling::window --send-to-desktop 4; chunkc tiling::desktop --focus 4
# shift + cmd - 5 : chunkc tiling::window --send-to-desktop 5; chunkc tiling::desktop --focus 5
# shift + cmd - 6 : chunkc tiling::window --send-to-desktop 6; chunkc tiling::desktop --focus 6
# shift + cmd - 7 : chunkc tiling::window --send-to-desktop 7; chunkc tiling::desktop --focus 7

# ctrl + alt - 1  : chunkc tiling::monitor -f 1
# ctrl + alt - 2  : chunkc tiling::monitor -f 2
# ctrl + alt - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
alt + shift - u : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
alt + shift - y : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
# shift + alt + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
# shift + alt + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
# shift + alt + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# increase region size
alt + cmd - a : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge west
alt + cmd - r : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge south
alt + cmd - w : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge north
alt + cmd - s : chunkc tiling::window --use-temporary-ratio 0.05 --adjust-window-edge east

# decrease region size
alt + cmd + ctrl - a : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge west
alt + cmd + ctrl - r : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge south
alt + cmd + ctrl - w : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge north
alt + cmd + ctrl - s : chunkc tiling::window --use-temporary-ratio -0.05 --adjust-window-edge east

# set insertion point for focused container
ctrl + alt - f : chunkc tiling::window --use-insertion-point cancel
ctrl + alt - h : chunkc tiling::window --use-insertion-point west
ctrl + alt - n : chunkc tiling::window --use-insertion-point south
ctrl + alt - e : chunkc tiling::window --use-insertion-point north
ctrl + alt - i : chunkc tiling::window --use-insertion-point east

# rotate tree
alt - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
alt + shift - x : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
alt - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
alt - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
alt - f : chunkc tiling::window --toggle fullscreen

# toggle window native fullscreen
shift + alt - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
alt - z : chunkc tiling::window --toggle parent

# toggle window split type
alt - c : chunkc tiling::window --toggle split

# toggle window fade
alt - q : chunkc tiling::window --toggle fade

# float / unfloat window and center on screen
alt - t : chunkc tiling::window --toggle float;\
          chunkc tiling::window --grid-layout 4:4:1:1:2:2

# toggle sticky
alt - s : chunkc tiling::window --toggle sticky

# toggle sticky, float and resize to picture-in-picture size
alt - p : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --grid-layout 5:5:3:0:2:2

# float next window to be tiled
shift + alt - t : chunkc set window_float_next 1

# change layout of desktop
ctrl + alt - a : chunkc tiling::desktop --layout bsp
ctrl + alt - r : chunkc tiling::desktop --layout monocle
ctrl + alt - s : chunkc tiling::desktop --layout float

ctrl + alt - l : chunkc tiling::desktop --deserialize ~/.chunkwm_layout
ctrl + alt + cmd - l : chunkc tiling::desktop --serialize ~/.chunkwm_layout

# Fix screenshot taking in app mode
cmd + shift - 4 -> : chunkc border::clear
ctrl + cmd + shift - 4 -> : chunkc border::clear

# MPC commands
ctrl + alt + cmd + shift - 0x23 : mpc toggle
ctrl + alt + cmd - 0x2B : mpc prev
ctrl + alt + cmd - 0x2F : mpc next

# Reload Chunkwm tiling rules
ctrl + alt + cmd - x : brew services restart chunkwm
ctrl + alt + cmd - z : sh ~/.chunkwm_rules
