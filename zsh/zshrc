#!/usr/bin/env zsh

export EDITOR=nvim
export TERM=xterm-256color
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export PATH="/usr/local/sbin:$HOME/.dotfiles/etc/bin:$PATH"
export PATH="/Applications/Postgres.app/Contents/Versions/9.6/bin:$PATH"
export ZSH_CACHE_DIR="${TMPDIR:-/tmp}"

export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

ulimit -n 8192

# POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(user dir vcs rbenv rspec_stats newline)
# POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator ip background_jobs history time)

# Prefer using emacs mode for zsh
bindkey -e

source ~/.zinit/bin/zinit.zsh

zinit ice wait"0" lucid
zinit light zsh-users/zsh-completions

zinit ice wait"1" atload'_history_substring_search_bind_keys' lucid
zinit light zsh-users/zsh-history-substring-search

zinit light zdharma/history-search-multi-word

zinit ice wait"!0" atload'_zsh_autosuggest_start' lucid
zinit light zsh-users/zsh-autosuggestions

# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
zinit ice from"gh-r" as"program"
zinit light junegunn/fzf-bin

PS1=$(dirs)$'\n'"❯ "
# zinit ice wait'0' lucid # This saves 20ms
# zinit ice wait'0' atload"p9k_refresh_prompt_inplace" lucid reset-prompt # This does not work just yet
zinit light romkatv/powerlevel10k

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# zinit ice "rupa/z" pick"z.sh"
# zinit light "rupa/z"
zinit light ajeetdsouza/zoxide

zinit snippet OMZ::lib/history.zsh

zinit ice wait"1" as"completion" lucid
zinit snippet https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker

zinit ice wait"1" as"completion" lucid
zinit snippet https://github.com/docker/compose/blob/master/contrib/completion/zsh/_docker-compose

# Load my zsh dotfiles, aliases
files=( {00_aliases,10_options,20_functions}.zsh )
zinit ice multisrc"\$files" pick"/dev/null"
zinit light %HOME/.dotfiles/zsh/config

zinit ice wait"0" atinit"zpcompinit" lucid
zinit light zdharma/fast-syntax-highlighting

# Note: Use wait 1 second works
zinit ice svn wait"1" atload"zpcdreplay" lucid
zinit snippet OMZ::plugins/kubectl

# zinit ice wait"1" svn atload'your_command_here'
# zinit light zdharma/null

zinit ice wait"0" lucid
zinit light romkatv/zsh-prompt-benchmark

# Compinit : After zinits, before cdreplay
# https://carlosbecker.com/posts/speeding-up-zsh/
autoload -Uz compinit
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
  compinit;
else
  compinit -C;
fi

zinit cdreplay -q

# Kitty autocompletion (Place after compinit)
kitty + complete setup zsh | source /dev/stdin

# Key bindings for zsh-history-substring-search
_history_substring_search_bind_keys() {
  bindkey '^[[A' history-substring-search-up
  bindkey '^[[B' history-substring-search-down
  bindkey -M emacs '^P' history-substring-search-up
  bindkey -M emacs '^N' history-substring-search-down
  bindkey -M vicmd 'k' history-substring-search-up
  bindkey -M vicmd 'j' history-substring-search-down
}

if [ -d "$HOME/.asdf" ]; then
  . $HOME/.asdf/asdf.sh
  . $HOME/.asdf/completions/asdf.bash
fi

if [ -d "$HOME/.asdf/plugins/java" ]; then
  zinit ice wait"0" pick".asdf/plugins/java/set-java-home.sh" lucid
  zinit light %HOME
fi

if [ -d "$HOME/.rbenv" ]; then
  eval "$(rbenv init - --no-rehash)"
fi

if [ -d "$HOME/.jenv" ]; then
  export PATH="$HOME/.jenv/bin:$PATH"
  eval "$(jenv init -)"
fi

# Timing App Terminal Support
if [ $ITERM_SESSION_ID ]; then
  DISABLE_AUTO_TITLE="true"
  echo -ne "\033]0; ${USER} @ ${HOST%%.*} : ${PWD/# $HOME/ ~} \007"
fi

precmd() {
  echo -ne "\033]0; ${USER} @ ${HOST%%.*} : ${PWD/# $HOME/ ~} \007"
}

if [ -f "$HOME/.zshrc.local" ]; then
  source "$HOME/.zshrc.local"
fi

# source ~/.bashhub/bashhub.zsh
if [ -f ~/.bashhub/bashhub.zsh ]; then
  zinit ice wait"0" pick".bashhub/bashhub.zsh" lucid
  zinit light %HOME
fi

# Install zoxide (rust)
if ! command -v zoxide &> /dev/null; then
  echo "zoxide not exist, downloading..."
  curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/ajeetdsouza/zoxide/master/install.sh | sh
fi
